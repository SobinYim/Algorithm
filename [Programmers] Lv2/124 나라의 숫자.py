def solution(n): #자연수
    ans="" #변환한 숫자
    cnt=0 #연속으로 등장한 0의 갯수
    while n:
        if not (tmp:=n%3): #3진수에서 해당 자리가 0이라면
            cnt+=1
            n//=3
            continue
        if cnt: #이전에 0이 등장하였다면
            if tmp==1:
                ans+=f"4{(cnt-1)*'2'}"
                cnt=1 #자릿수
            else:
                ans+=f"4{(cnt-1)*'2'}1"
                cnt=0
        else:
            ans+=str(tmp)
        n//=3
    return ans[::-1]

'''
[효율성 테스트] 평균 실행 시간 : 0.01 평균 메모리 사용량: 10.17

3진수로 변환한 것에서 0이 포함된 경우만 다르고 나머지는 같다
그러니까 3진수가 211이라면 124 나라의 숫자도 211
0이 포함되면 124나라의 숫자에서 1씩 빼준다고 보면 되는데 10은 4 20은 14인 식이다 100은 100>40>24 이런 식이라 24
사실 다른 사람의 풀이에서 본 것처럼 n-1 해도 된다는 것까지는 생각했는데 변환할 때 숫자를 1씩 뺀다고 되는 게 아니다 보니 
경우의 수 처리하면 이거나 저거나 마찬가지인 것 같아 더 생각 안 했는데 생각보다 간단하게 해결 가능한 문제였다 아쉽스
n-1해주는 이유는 자릿수 맞춰주기 위함!

def solution(n):
    num = ['1','2','4']
    answer = ""
    while n > 0:
        n -= 1
        answer = num[n % 3] + answer
        n //= 3
    return answer
[효율성 테스트] 평균 실행 시간 : 0.01 평균 메모리 사용량: 10.12
심플하고 좋다
answer=num[n % 3]+answer을 써서 뒤집어주지 않아도 되는 점도 굿
'''