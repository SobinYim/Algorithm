ans=[] #한 번에 출력을 처리하기 위한 리스트
T=int(input()) #tc 개수
for t in range(1,T+1):
    n=int(input()) #세 가지 합을 구하기 위한 n
    s2=n**2
    ans.append(f"#{t} {s2//2+n//2+[0 if n%2==0 else 1][0]} {s2} {s2+n}")
for a in ans:
    print(a)
'''
등차수열의 합 공식을 정리하여 아래와 같은 방식으로 구함
S1 = 양의 정수 중에서 작은 순서대로 N개의 합 == int((s2+n)/2)이나 숫자가 커질 시 오차 발생 => s2//2+n//2+(0 if n%2==0 else 1) 으로 수정
S2 = 양의 정수 중 홀수인 것들 중에서 작은 순서대로 N개의 합 = n**2
S3= 양의 정수 중 짝수인 것들 중에서 작은 순서대로 N개의 합 = s2+n

int(s2//2+n//2+[0 if n%2==0 else 1][0]로 제출하고
리스트보다 튜플이 더 빠르지 않을까?와 같은 궁금증이 들어 튜플로도 제출해 본 결과, 큰 차이 없었음 (190ms > 203ms)
time.time()을 이용하여 로컬 환경에서 tc를 대폭 늘려서 테스트해 보니 튜플이 빨랐음

제출일 기준 python 실행시간 1위
'''